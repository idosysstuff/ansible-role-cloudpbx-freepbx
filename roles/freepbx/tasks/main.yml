---
- name: Download FreePBX tarball ({{ fpbx_ver }})
  ansible.builtin.get_url:
    url: "http://mirror.freepbx.org/modules/packages/freepbx/freepbx-{{ fpbx_ver }}-latest.tgz"
    dest: "/usr/src/freepbx-{{ fpbx_ver }}-latest.tgz"
    mode: "0644"
  register: download_result
  until: download_result is succeeded
  retries: 3
  delay: 5

- name: Create FreePBX source directory
  ansible.builtin.file:
    path: /usr/src/freepbx
    state: directory
    mode: "0755"

- name: Unpack FreePBX tarball
  ansible.builtin.unarchive:
    src: "/usr/src/freepbx-{{ fpbx_ver }}-latest.tgz"
    dest: /usr/src
    remote_src: yes
    creates: /usr/src/freepbx/install

- name: Remove FreePBX tarball after extraction
  ansible.builtin.file:
    path: "/usr/src/freepbx-{{ fpbx_ver }}-latest.tgz"
    state: absent


- name: Ensure Asterisk service is started before FreePBX install
  ansible.builtin.systemd:
    name: asterisk
    state: started
    enabled: yes
    daemon_reload: yes
  register: asterisk_service_start


- name: Wait for Asterisk to initialize fully (increased delay)
  ansible.builtin.pause:
    seconds: 20
  when: asterisk_service_start.changed

- name: Check Asterisk process owner
  ansible.builtin.shell: ps -o user= -p $(cat /var/run/asterisk/asterisk.pid) | head -n 1
  register: asterisk_process_owner
  changed_when: false
  failed_when: "'asterisk' not in asterisk_process_owner.stdout"
  when: asterisk_service_start.changed
  ignore_errors: true

- name: Re-Check Asterisk process owner after potential PID file delay
  ansible.builtin.shell: ps -o user= -p $(cat /var/run/asterisk/asterisk.pid) | head -n 1
  register: asterisk_process_owner_retry
  changed_when: false
  failed_when: "'asterisk' not in asterisk_process_owner_retry.stdout"
  when: asterisk_service_start.changed and asterisk_process_owner is failed


- name: Ensure manager.conf exists (basic check)
  ansible.builtin.stat:
    path: /etc/asterisk/manager.conf
  register: manager_conf_stat

- name: Fail if manager.conf does not exist
  ansible.builtin.fail:
    msg: "/etc/asterisk/manager.conf not found. Asterisk 'make samples' might have failed or file was removed."
  when: not manager_conf_stat.stat.exists

- name: Configure basic AMI settings in manager.conf
  ansible.builtin.blockinfile:
    path: /etc/asterisk/manager.conf
    block: |
      [general]
      enabled = yes
      bindaddr = 127.0.0.1 ; Or 0.0.0.0 if needed for external access later
      ; port = 5038 ; Default port
    marker: "
    create: yes
    owner: asterisk
    group: asterisk
    mode: "0640"
  notify: Reload asterisk


- name: Flush handlers to apply manager.conf changes
  meta: flush_handlers

- name: Wait for Asterisk Manager Interface (AMI) on port 5038
  ansible.builtin.wait_for:
    port: 5038
    host: 127.0.0.1
    delay: 5
    timeout: 60



- name: Create potentially required empty Asterisk config files
  ansible.builtin.file:
    path: "/etc/asterisk/{{ item }}"
    state: touch
    owner: asterisk
    group: asterisk
    mode: "0664"
  with_items:
    - modules.conf
    - cdr.conf


- name: Run FreePBX installation script
  ansible.builtin.command:

    cmd: ./install -n --dbhost localhost --dbuser {{ db_fpbx_user }} --dbpass {{ db_fpbx_pass }} --dbname asterisk --cdrdbname asteriskcdrdb --dbport 3306 --user asterisk --group asterisk
    chdir: /usr/src/freepbx
    creates: /etc/freepbx.conf
  register: fpbx_install_result

  failed_when: fpbx_install_result.rc != 0 and 'Successfully created Asterisk Manager user' not in fpbx_install_result.stdout


- name: Set ownership and permissions using fwconsole chown
  ansible.builtin.command:
    cmd: fwconsole chown
  register: fwconsole_chown
  changed_when: "'Taking too long? Customize the chown command' in fwconsole_chown.stdout"
  failed_when: fwconsole_chown.rc != 0

- name: Install and enable standard/extended repos and core modules
  ansible.builtin.command:
    cmd: "fwconsole ma {{ item }}"
  with_items:
    - enable repo standard
    - enable repo extended
    - downloadinstall core
    - downloadinstall framework
    - downloadinstall sysadmin
    - downloadinstall userman
    - downloadinstall pm2
    - downloadinstall certman
    - downloadinstall api
    - downloadinstall ucp
    - downloadinstall announcements
    - downloadinstall backup
    - downloadinstall blacklist
    - downloadinstall callrecording
    - downloadinstall cdr
    - downloadinstall conferences
    - downloadinstall customappsreg
    - downloadinstall dashboard
    - downloadinstall extensions
    - downloadinstall featurecodeadmin
    - downloadinstall findmefollow
    - downloadinstall framework
    - downloadinstall infoservices
    - downloadinstall ivr
    - downloadinstall languages
    - downloadinstall logfiles
    - downloadinstall music
    - downloadinstall parking
    - downloadinstall queues
    - downloadinstall ringgroups
    - downloadinstall sipsettings
    - downloadinstall soundlang
    - downloadinstall timeconditions
    - downloadinstall voicemail
  register: fwconsole_ma
  changed_when: "'downloading' in fwconsole_ma.stdout or 'installing' in fwconsole_ma.stdout"
  failed_when: fwconsole_ma.rc != 0

- name: Reload FreePBX configuration
  ansible.builtin.command:
    cmd: fwconsole reload
  register: fwconsole_reload
  changed_when: "'Reload Completed' in fwconsole_reload.stdout"
  failed_when: fwconsole_reload.rc != 0

- name: Restart Asterisk via fwconsole (handles Asterisk restart correctly)
  ansible.builtin.command:
    cmd: fwconsole restart
  register: fwconsole_restart
  changed_when: "'Asterisk Started' in fwconsole_restart.stdout"
  failed_when: fwconsole_restart.rc != 0

- name: Create FreePBX Startup service file from template
  ansible.builtin.template:
    src: freepbx.service.j2
    dest: /etc/systemd/system/freepbx.service
    owner: root
    group: root
    mode: "0644"
  notify: Reload systemd

- name: Enable and ensure FreePBX service is started (via fwconsole)
  ansible.builtin.systemd:
    name: freepbx.service
    enabled: yes
    state: started
    daemon_reload: yes
