---
- name: Deploy CloudPBX FreePBX Stack
  hosts: all
  become: true
  vars:
    # Example: db_root_pass: "{{ vault_db_root_pass }}"
    db_root_pass: "{{ lookup('env','DB_ROOT_PASS') | default('please_set_a_secure_root_password') }}"
    db_fpbx_user: "freepbxuser"
    db_fpbx_pass: "{{ lookup('env','DB_FPBX_PASS') | default('please_set_a_secure_fpbx_password') }}"

    fpbx_ver: "17.0"
    ast_ver: "21"
    nodejs_ver: "18"

    system_hostname: "fpbx.local"

  roles:
    - role: sysprep
      tags: sysprep
    - role: db_prep
      tags: db_prep
    - role: asterisk
      tags: asterisk
    - role: freepbx
      tags: freepbx
    - role: phpmyadmin
      tags: phpmyadmin
    - role: webmin
      tags: webmin

  post_tasks:
    - name: Set final system hostname
      ansible.builtin.hostname:
        name: "{{ system_hostname }}"
      tags: always

    - name: Final system reboot to ensure all services start correctly
      ansible.builtin.reboot:
        msg: "Rebooting host after complete CloudPBX FreePBX deployment."
        connect_timeout: 5
        reboot_timeout: 600
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: whoami
      tags: always

  handlers:
    - name: Restart mariadb
      ansible.builtin.systemd:
        name: mariadb
        state: restarted
      listen: "Restart mariadb"

    - name: Reload systemd
      ansible.builtin.systemd:
        daemon_reload: yes
      listen: "Reload systemd"

    - name: Reload asterisk config
      ansible.builtin.command:
        cmd: asterisk -rx "core reload"
      listen: "Reload asterisk"
      ignore_errors: yes

    - name: Restart apache2
      ansible.builtin.systemd:
        name: apache2
        state: restarted
      listen: "Restart apache2"
